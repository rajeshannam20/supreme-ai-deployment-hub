name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-cov black flake8
    
    - name: Lint with black
      run: |
        black --check --diff src/ app/ tests/
    
    - name: Lint with flake8
      run: |
        flake8 src/ app/ tests/ --max-line-length=88 --extend-ignore=E203,W503
    
    - name: Run tests with pytest
      env:
        JWT_SECRET: test-secret-key
        ENCRYPTION_KEY: test-encryption-key
        ENVIRONMENT: test
        REDIS_URL: redis://localhost:6379/0
      run: |
        export PYTHONPATH=$PYTHONPATH:$(pwd)/src
        pytest tests/ -v --cov=src --cov-report=xml --cov-report=html
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: always()
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: ./

  deploy-preview:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy Preview to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./

# Required Secrets:
# Set these in your GitHub repository settings > Secrets and variables > Actions
# 
# VERCEL_TOKEN: Your Vercel API token
#   - Go to https://vercel.com/account/tokens
#   - Create a new token with appropriate scope
#
# VERCEL_ORG_ID: Your Vercel organization/team ID  
#   - Found in Vercel project settings > General > Project ID section
#   - Or run: vercel whoami
#
# VERCEL_PROJECT_ID: Your Vercel project ID
#   - Found in Vercel project settings > General > Project ID section
#   - Or in .vercel/project.json after linking project